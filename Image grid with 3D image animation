{% comment %}
  Pure Image Grid Section - No Text Elements
{% endcomment %}

{%- liquid
  assign animation_delay = 0
-%}

<section class="vizual-image-grid-wrapper" data-section-id="{{ section.id }}">
  <div class="vizual-container">
    <div
      class="vizual-image-grid {{ section.settings.grid_layout }}"
      data-animation="{{ section.settings.animation_type }}"
    >
      {% for block in section.blocks %}
        {%- liquid
          assign animation_delay = animation_delay | plus: 100
          assign grid_item_class = 'vizual-grid-item'

          case block.settings.item_size
            when 'compact'
              assign grid_item_class = grid_item_class | append: ' vizual-item--compact'
            when 'standard'
              assign grid_item_class = grid_item_class | append: ' vizual-item--standard'
            when 'extended'
              assign grid_item_class = grid_item_class | append: ' vizual-item--extended'
          endcase
        -%}

        <div
          class="{{ grid_item_class }}"
          data-animation-delay="{{ animation_delay }}"
          {{ block.shopify_attributes }}
        >
          <div class="vizual-image-card">
            {% if block.settings.main_image != blank %}
              <div class="vizual-image-container">
                {{
                  block.settings.main_image
                  | image_url: width: 800
                  | image_tag: alt: 'Product Image', loading: 'lazy', class: 'vizual-main-image'
                }}

                {% if block.settings.overlay_color != blank %}
                  <div class="vizual-image-overlay" style="background: {{ block.settings.overlay_color }};"></div>
                {% endif %}
              </div>
            {% endif %}

            {% if block.settings.show_badge and block.settings.badge_image != blank %}
              <div class="vizual-badge-container">
                {{
                  block.settings.badge_image
                  | image_url: width: 100
                  | image_tag: alt: 'Badge', class: 'vizual-badge-image'
                }}
              </div>
            {% endif %}

            {% if block.settings.show_corner_element and block.settings.corner_image != blank %}
              <div class="vizual-corner-element">
                {{
                  block.settings.corner_image
                  | image_url: width: 60
                  | image_tag: alt: 'Corner Element', class: 'vizual-corner-image'
                }}
              </div>
            {% endif %}
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

<style>
  .vizual-image-grid-wrapper {
    padding: {{ section.settings.section_padding_top }}px 0 {{ section.settings.section_padding_bottom }}px;
    background: {{ section.settings.section_background }};
  }

  .vizual-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  /* Grid Layouts */
  .vizual-image-grid {
    display: grid;
    gap: {{ section.settings.grid_gap }}px;
    opacity: 0;
    animation: vizualFadeInGrid 0.8s ease-out forwards;
  }

  .vizual-image-grid.vizual-masonry-layout {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-auto-rows: minmax(200px, auto);
  }

  .vizual-image-grid.vizual-uniform-layout {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }

  .vizual-image-grid.vizual-asymmetric-layout {
    grid-template-columns: repeat(12, 1fr);
  }

  /* Grid Item Sizes for Asymmetric Layout */
  .vizual-asymmetric-layout .vizual-item--compact {
    grid-column: span 4;
  }

  .vizual-asymmetric-layout .vizual-item--standard {
    grid-column: span 6;
  }

  .vizual-asymmetric-layout .vizual-item--extended {
    grid-column: span 8;
  }

  /* Image Card Styling */
  .vizual-grid-item {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .vizual-grid-item.vizual-animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  .vizual-image-card {
    position: relative;
    height: {{ section.settings.card_height }}px;
    border-radius: {{ section.settings.border_radius }}px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    cursor: pointer;
    background: {{ section.settings.card_background }};
  }

  .vizual-image-card:hover {
    transform: translateY(-{{ section.settings.hover_lift }}px);
    box-shadow: 0 {{ section.settings.hover_shadow }}px 30px rgba(0, 0, 0, 0.15);
  }

  .vizual-image-container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .vizual-main-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .vizual-image-card:hover .vizual-main-image {
    transform: scale({{ section.settings.hover_zoom }});
  }

  .vizual-image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }};
    transition: opacity 0.3s ease;
  }

  .vizual-image-card:hover .vizual-image-overlay {
    opacity: {{ section.settings.hover_overlay_opacity | divided_by: 100.0 }};
  }

  .vizual-badge-container {
    position: absolute;
    top: {{ section.settings.badge_position_top }}px;
    right: {{ section.settings.badge_position_right }}px;
    z-index: 3;
    width: {{ section.settings.badge_size }}px;
    height: {{ section.settings.badge_size }}px;
    border-radius: 50%;
    overflow: hidden;
    background: {{ section.settings.badge_background }};
    padding: {{ section.settings.badge_padding }}px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  }

  .vizual-badge-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .vizual-corner-element {
    position: absolute;
    bottom: {{ section.settings.corner_position_bottom }}px;
    left: {{ section.settings.corner_position_left }}px;
    z-index: 3;
    width: {{ section.settings.corner_size }}px;
    height: {{ section.settings.corner_size }}px;
  }

  .vizual-corner-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  /* Animations */
  @keyframes vizualFadeInGrid {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes vizualSlideInLeft {
    from {
      opacity: 0;
      transform: translateX(-30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes vizualSlideInRight {
    from {
      opacity: 0;
      transform: translateX(30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes vizualScaleIn {
    from {
      opacity: 0;
      transform: scale(0.8);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes vizualRotateIn {
    from {
      opacity: 0;
      transform: rotate(-10deg) scale(0.8);
    }
    to {
      opacity: 1;
      transform: rotate(0deg) scale(1);
    }
  }

  /* Animation Classes */
  .vizual-image-grid[data-animation="slide-left"] .vizual-grid-item.vizual-animate-in {
    animation: vizualSlideInLeft 0.6s ease-out forwards;
  }

  .vizual-image-grid[data-animation="slide-right"] .vizual-grid-item.vizual-animate-in {
    animation: vizualSlideInRight 0.6s ease-out forwards;
  }

  .vizual-image-grid[data-animation="scale"] .vizual-grid-item.vizual-animate-in {
    animation: vizualScaleIn 0.6s ease-out forwards;
  }

  .vizual-image-grid[data-animation="rotate"] .vizual-grid-item.vizual-animate-in {
    animation: vizualRotateIn 0.6s ease-out forwards;
  }

  /* Liquid Loading Animation */
  .vizual-liquid-loading {
    position: relative;
    overflow: hidden;
  }

  .vizual-liquid-loading::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    animation: vizualLiquidFlow 2s infinite;
    z-index: 2;
  }

  @keyframes vizualLiquidFlow {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .vizual-image-grid,
    .vizual-image-grid.vizual-asymmetric-layout {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }

    .vizual-asymmetric-layout .vizual-item--compact,
    .vizual-asymmetric-layout .vizual-item--standard,
    .vizual-asymmetric-layout .vizual-item--extended {
      grid-column: span 1;
    }

    .vizual-image-card {
      height: {{ section.settings.mobile_card_height }}px;
    }

    .vizual-container {
      padding: 0 15px;
    }

    .vizual-badge-container {
      width: {{ section.settings.mobile_badge_size }}px;
      height: {{ section.settings.mobile_badge_size }}px;
    }
  }

  @media (max-width: 480px) {
    .vizual-image-grid {
      grid-template-columns: 1fr;
      gap: {{ section.settings.mobile_grid_gap }}px;
    }

    .vizual-image-card {
      height: {{ section.settings.mobile_card_height | minus: 50 }}px;
    }
  }

  /* Special Effects */
  .vizual-image-card.vizual-effect-blur:hover .vizual-main-image {
    filter: blur(2px);
  }

  .vizual-image-card.vizual-effect-grayscale:hover .vizual-main-image {
    filter: grayscale(100%);
  }

  .vizual-image-card.vizual-effect-sepia:hover .vizual-main-image {
    filter: sepia(100%);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const vizualImageGrid = document.querySelector('.vizual-image-grid');
    const vizualGridItems = document.querySelectorAll('.vizual-grid-item');

    // Intersection Observer for scroll animations
    const vizualObserverOptions = {
      threshold: 0.1,
      rootMargin: '50px 0px',
    };

    const vizualObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const delay = entry.target.dataset.animationDelay || 0;
          setTimeout(() => {
            entry.target.classList.add('vizual-animate-in');
          }, delay);
          vizualObserver.unobserve(entry.target);
        }
      });
    }, vizualObserverOptions);

    // Observe all grid items
    vizualGridItems.forEach((item) => {
      vizualObserver.observe(item);
    });

    // Add liquid loading effect on hover
    vizualGridItems.forEach((item) => {
      item.addEventListener('mouseenter', function () {
        this.classList.add('vizual-liquid-loading');
        setTimeout(() => {
          this.classList.remove('vizual-liquid-loading');
        }, 2000);
      });
    });

    // Enhanced 3D hover effects
    vizualGridItems.forEach((item) => {
      const card = item.querySelector('.vizual-image-card');

      item.addEventListener('mousemove', function (e) {
        const rect = this.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;

        const rotateX = (y - centerY) / 15;
        const rotateY = (centerX - x) / 15;

        card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateY(-5px)`;
      });

      item.addEventListener('mouseleave', function () {
        card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg) translateY(0px)';
      });
    });

    // Random animation delays for more organic feel
    vizualGridItems.forEach((item, index) => {
      const randomDelay = Math.random() * 200 + index * 50;
      item.dataset.animationDelay = randomDelay;
    });
  });
</script>

{% schema %}
{
  "name": "Image Grid Gallery",
  "tag": "section",
  "class": "vizual-image-grid-wrapper",
  "settings": [
    {
      "type": "header",
      "content": "Grid Layout Settings"
    },
    {
      "type": "select",
      "id": "grid_layout",
      "label": "Grid Layout Style",
      "options": [
        {
          "value": "vizual-uniform-layout",
          "label": "Uniform Grid"
        },
        {
          "value": "vizual-masonry-layout",
          "label": "Masonry Layout"
        },
        {
          "value": "vizual-asymmetric-layout",
          "label": "Asymmetric Grid"
        }
      ],
      "default": "vizual-masonry-layout"
    },
    {
      "type": "select",
      "id": "animation_type",
      "label": "Animation Style",
      "options": [
        {
          "value": "fade",
          "label": "Fade In"
        },
        {
          "value": "slide-left",
          "label": "Slide From Left"
        },
        {
          "value": "slide-right",
          "label": "Slide From Right"
        },
        {
          "value": "scale",
          "label": "Scale In"
        },
        {
          "value": "rotate",
          "label": "Rotate In"
        }
      ],
      "default": "fade"
    },
    {
      "type": "range",
      "id": "grid_gap",
      "label": "Grid Gap",
      "min": 5,
      "max": 50,
      "step": 5,
      "default": 20,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_grid_gap",
      "label": "Mobile Grid Gap",
      "min": 5,
      "max": 30,
      "step": 5,
      "default": 15,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Card Appearance"
    },
    {
      "type": "range",
      "id": "card_height",
      "label": "Card Height (Desktop)",
      "min": 200,
      "max": 500,
      "step": 25,
      "default": 300,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_card_height",
      "label": "Card Height (Mobile)",
      "min": 150,
      "max": 400,
      "step": 25,
      "default": 250,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Border Radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "default": 12,
      "unit": "px"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card Background",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "section_background",
      "label": "Section Background",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Hover Effects"
    },
    {
      "type": "range",
      "id": "hover_lift",
      "label": "Hover Lift Distance",
      "min": 0,
      "max": 20,
      "step": 2,
      "default": 8,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "hover_shadow",
      "label": "Hover Shadow Size",
      "min": 4,
      "max": 24,
      "step": 2,
      "default": 12,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "hover_zoom_pct",
      "label": "Image Zoom on Hover (%)",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 5
    },
    {
      "type": "header",
      "content": "Image Overlay"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "Default Overlay Opacity",
      "min": 0,
      "max": 80,
      "step": 5,
      "default": 0,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "hover_overlay_opacity",
      "label": "Hover Overlay Opacity",
      "min": 0,
      "max": 80,
      "step": 5,
      "default": 20,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "Badge Settings"
    },
    {
      "type": "range",
      "id": "badge_size",
      "label": "Badge Size (Desktop)",
      "min": 40,
      "max": 100,
      "step": 5,
      "default": 60,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_badge_size",
      "label": "Badge Size (Mobile)",
      "min": 30,
      "max": 80,
      "step": 5,
      "default": 45,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "badge_padding",
      "label": "Badge Padding",
      "min": 2,
      "max": 15,
      "step": 1,
      "default": 8,
      "unit": "px"
    },
    {
      "type": "color",
      "id": "badge_background",
      "label": "Badge Background",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "badge_position_top",
      "label": "Badge Position from Top",
      "min": 10,
      "max": 50,
      "step": 5,
      "default": 15,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "badge_position_right",
      "label": "Badge Position from Right",
      "min": 10,
      "max": 50,
      "step": 5,
      "default": 15,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Corner Element Settings"
    },
    {
      "type": "range",
      "id": "corner_size",
      "label": "Corner Element Size",
      "min": 30,
      "max": 80,
      "step": 5,
      "default": 50,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "corner_position_bottom",
      "label": "Corner Position from Bottom",
      "min": 10,
      "max": 50,
      "step": 5,
      "default": 20,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "corner_position_left",
      "label": "Corner Position from Left",
      "min": 10,
      "max": 50,
      "step": 5,
      "default": 20,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "label": "Section Padding Top",
      "min": 0,
      "max": 100,
      "step": 10,
      "default": 60,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "label": "Section Padding Bottom",
      "min": 0,
      "max": 100,
      "step": 10,
      "default": 60,
      "unit": "px"
    }
  ],
  "blocks": [
    {
      "type": "image_item",
      "name": "Image Item",
      "settings": [
        {
          "type": "image_picker",
          "id": "main_image",
          "label": "Main Image"
        },
        {
          "type": "select",
          "id": "item_size",
          "label": "Grid Item Size (Asymmetric Layout Only)",
          "options": [
            {
              "value": "compact",
              "label": "Compact (4 columns)"
            },
            {
              "value": "standard",
              "label": "Standard (6 columns)"
            },
            {
              "value": "extended",
              "label": "Extended (8 columns)"
            }
          ],
          "default": "standard"
        },
        {
          "type": "color",
          "id": "overlay_color",
          "label": "Custom Overlay Color (optional)",
          "info": "Leave blank to use no overlay"
        },
        {
          "type": "header",
          "content": "Badge Settings"
        },
        {
          "type": "checkbox",
          "id": "show_badge",
          "label": "Show Badge",
          "default": false
        },
        {
          "type": "image_picker",
          "id": "badge_image",
          "label": "Badge Image"
        },
        {
          "type": "header",
          "content": "Corner Element"
        },
        {
          "type": "checkbox",
          "id": "show_corner_element",
          "label": "Show Corner Element",
          "default": false
        },
        {
          "type": "image_picker",
          "id": "corner_image",
          "label": "Corner Element Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image Grid Gallery",
      "blocks": [
        {
          "type": "image_item",
          "settings": {
            "item_size": "standard"
          }
        },
        {
          "type": "image_item",
          "settings": {
            "item_size": "extended"
          }
        },
        {
          "type": "image_item",
          "settings": {
            "item_size": "compact"
          }
        },
        {
          "type": "image_item",
          "settings": {
            "item_size": "standard"
          }
        },
        {
          "type": "image_item",
          "settings": {
            "item_size": "extended"
          }
        }
      ]
    }
  ]
}
{% endschema %}
